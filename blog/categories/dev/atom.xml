<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: dev | Raging Bits]]></title>
  <link href="http://jvrsantacruz.github.io/blog/categories/dev/atom.xml" rel="self"/>
  <link href="http://jvrsantacruz.github.io/"/>
  <updated>2013-09-22T12:15:45+02:00</updated>
  <id>http://jvrsantacruz.github.io/</id>
  <author>
    <name><![CDATA[Javier Santacruz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Migrar de gmail a gmail]]></title>
    <link href="http://jvrsantacruz.github.io/blog/2012/02/19/migrar-gmail/"/>
    <updated>2012-02-19T22:00:00+01:00</updated>
    <id>http://jvrsantacruz.github.io/blog/2012/02/19/migrar-gmail</id>
    <content type="html"><![CDATA[<p><img src="./img/migrar-gmail-header.svg" width="580px"/></p>

<p>Intento migrar mi cuenta de gmail, de una antigua a otra más seria, llevándome
todos los contactos, feeds, filtros, calendarios, chats y, por supuesto, los
correos.
Los correos deben mantener:</p>

<ul>
<li>Leidos</li>
<li>Preferidos</li>
<li>fechas</li>
<li>Origen y destino (no ser un reenvio)</li>
<li>Etiquetas (múltiples)</li>
</ul>


<h2>Migrar correo</h2>

<p>Probé 4 opciones, <a href="http://code.google.com/p/got-your-back/">gyb</a>, <a href="http://imapsync.lamiral.info/README">imapsync</a>, <a href="http://gmail-backup.com">gmail-backup</a> y <a href="http://getthunderbird.com">thunderbird</a>, decantándome finalmente por <a href="http://code.google.com/p/got-your-back/">gyb</a>.
Todas ellas sincronizan el correo mediante <em>IMAP</em> entre las dos cuentas de google, por el procedimiendo de descargar primero el correo de la cuenta antigua al disco duro, y enviarlo posteriormente a la nueva.</p>

<h3>Activar <em>imap</em></h3>

<p>Debe irse a las opciones de ambas cuentas, a <code>Forwarding and POP/IMAP</code> y activar IMAP en ambas cuentas.</p>

<p><img src="./img/activate-imap.png" alt="activate-imap" /></p>

<h2>Con <a href="http://code.google.com/p/got-your-back/">Got-your-back</a></h2>

<p>Es el más rápido con diferencia, hace backup y restaura todo (etiquetas multiples, marca de importante, leidos&hellip;) y solo envía cada correo una vez.
Emplea autenticación mediante token como app Google. Al ejecutarlo escribirá una url a la que tendrás que acceder y logearte con la cuenta de gmail para permitirle acceso.</p>

<ol>
<li>Descargar el <a href="http://code.google.com/p/got-your-back/downloads/list">script</a></li>
<li><p>Realizar el backup de la cuenta antigua:</p>

<pre><code> python gyb.py --email antigua@gmail.com --backup --compress
</code></pre>

<p> Creará el directorio <code>GYB-Gmail-Backup-antigua@gmail.com</code> con el correo guardado.</p></li>
<li><p>Restaurar el correo en la nueva</p>

<pre><code> python gyb.py --email nueva@gmail.com --restore 
     --compress --folder GYB-Gmail-Backup-antigua@gmail.com
</code></pre></li>
</ol>


<p>El proceso de restore lleva mucho más tiempo.
Es la mejor forma con diferencia para hacer backup a una cuenta gmail.
De hecho me estoy pensando en mantener un backup offline de mi cuenta metiendo la orden de backup en el cron.</p>

<hr />

<h2>Con <a href="http://gmail-backup.com">gmail-backup</a></h2>

<p><a href="http://gmail-backup.com">gmail-backup</a> se ve que esté mantenido desde el 2009,
y solo está disponible en formato binario, no tiene licencia libre y está
compilado con una versión antigua de python. Aún así, es bastante más rápido
que <a href="http://imapsync.lamiral.info/README">imapsync</a> y es más sencillo de usar.</p>

<h3>Instalar <a href="http://gmail-backup.com">gmail-backup</a></h3>

<ol>
<li>Descargar el binario <a href="http://www.gmail-backup.com/gmail-backup-0-104">de su página oficial</a> y descomprimir.</li>
<li><p>Descargar e instalar <a href="http://www.python.org/download/releases/2.5.6/">python2.5</a> si no se encuentra en el sistema (intenta ejecutar <code>python2.5</code> en consola).</p>

<pre><code> code-block::bash
 tar -xvzf Python-2.5.6.tgz
 cd Python-2.5.6
 ./configure
 make
 sudo make altinstall
</code></pre></li>
</ol>


<p>  <strong>¡Ojo!</strong>: Usad <code>altinstall</code> y no simplemente <code>install</code>, o sobreescribirá la
  versión actual por defecto de Python en el sistema.</p>

<h3>backup &amp; restore</h3>

<p>Primero haremos un backup completo de nuestra cuenta <em>antigua</em> para a continuación restaurarla en la cuenta <em>nueva</em>.
Haciendo de esto, tendremos de paso una copia de seguridad de todo nuestro correo. Eso sí, tardará, aunque menos que <a href="http://imapsync.lamiral.info/README">imapsync</a>.</p>

<pre><code>code-block::bash
./gmail-backup.sh backup ~/gbackup antigua@gmail.com p4sw0rd \
&amp;&amp; ./gmail-backup.sh restore ~/gbackup nueva@gmail.com p4sw0rd
</code></pre>

<hr />

<h2>Con imapsync</h2>

<p><a href="http://imapsync.lamiral.info/README">imapsync</a> es una herramienta escrita en <em>Perl</em>, que sincroniza dos servidores
<em>IMAP</em>. Se le indica la cuenta de origen y de destino, y manda todos los
correos de orige a destino, sincronizándolos.</p>

<h3>Instalar imapsync</h3>

<pre><code>sudo apt-get install imapsync
</code></pre>

<h3>Sincronizar</h3>

<p>Para ello se llama a imapsync <em>dos veces</em>. Una para sincronizar los labels (folders) y otra para enviar el correo.</p>

<pre><code>imapsync\
    –user1 antigua@gmail.com\
    –user2 nueva@domain.com\
    -passfile1 ./antigua-pass\
    -passfile2 ./nueva-pass\
    –host1 imap.gmail.com\
    –host2 imap.gmail.com\
    -authmech1 LOGIN -authmech2 LOGIN\
    -port1 993 -port2 993\
    -split1 100 -split2 100\
    -ssl1 -ssl2\
    –syncinternaldates\
    –justfolders\


imapsync \
    –user1 antigua@gmail.com\
    –user2 nueva@domain.com\
    -passfile1 ./antigua-pass\
    -passfile2 ./nueva-pass\
    –host1 imap.gmail.com\
    –host2 imap.gmail.com\
    -authmech1 LOGIN -authmech2 LOGIN\
    -port1 993 -port2 993\
    -split1 500 -split2 100\
    -ssl1 -ssl2\
    --fastio1 --fastio2
    -syncinternaldates\
    -allowsizemismatch\
    --nofoldersizes\
    --skipsize\
    --fast\
    --useheader 'Message-Id' \
    --useheader 'X-Gmail-Received'
    --exclude "(Trash|Spam|Publicidad)"
    --timeout 100
</code></pre>

<p>Explicación de las opciones:</p>

<ul>
<li><strong>passfile</strong>: es un fichero de texto plano que contiene solo la clave, para
no ponerla directamente en la consola.</li>
<li><strong>syncinternaldates</strong>: Evita que se cargue la fecha de los emails.</li>
<li><strong>justfolders</strong>: Crea solo los directorios/labels.</li>
<li><strong>allowsizemismatch</strong>: Se quejaba de error por diferente tamaño en los correos
bajados, esto hace que los ignore.</li>
<li><strong>exclude</strong>: Carpetas/Labels a excluir de la sincronización.</li>
<li><strong>useheader</strong>: El imap de gmail omite esas cabeceras, forzarlas.</li>
<li><strong>split</strong>: Tamaño de petición a cada servidor. Al de subida pedimos menos.</li>
<li><strong>fastio</strong> <strong>fast</strong>: Realiza las operaciones más rápido</li>
<li><strong>nofoldersizes</strong> <strong>skipsize</strong>: No calcula estadísticas ni tamaños, que es lento.</li>
<li><strong>timeout</strong>: Abortar tras <em>x</em> segundos de inactividad.</li>
</ul>


<p>Aviso que tarda muchísimo, ya que debe descargar todo el correo y volverlo a
enviar, incluyendo attachments, <strong>para cada etiqueta</strong>, lo que hace que envie
<code>L</code> veces cada correo, donde <code>L</code> es el número de etiquetas que tiene. <strong>No se
duplica</strong> ya que gmail los detecta como el mismo y simplemente les añade la
etiqueta correspondiente en lugar de copiarlo de nuevo.</p>

<p>Cuando el proceso se para, es conveniente volverlo a ejecutar añadiendo el
parámetro: <code>--maxage int</code> donde <code>int</code> indica la fecha del el último correo que
enviamos, y así descarta evaluar los más antiguos.</p>

<p>Para reiniciar la conexión cuando se pilla usé un bucle infinito y la opción <code>--timeout 100</code>, para no tener que estar cuidando yo del proceso.</p>

<pre><code>code-block::bash
while [ 1 -eq 1 ] 
 do
    imapsync\
    -host1 imap.gmail.com -port1 993 -user1 antigua@gmail.com -passfile1\
    ./antiguapass -ssl1 -host2 imap.gmail.com -port2 993 -user2\
    nueva@gmail.com -passfile2 ./nuevapass -ssl2 -syncinternaldates -split1\
     500 -split2 500 --fastio1 --fastio2 -authmech1 LOGIN -authmech2 LOGIN\
     -useheader 'Message-Id' -useheader 'X-Gmail-Received'\
    --exclude "(Junk|Spam|Trash|Publicidad|All Mail|dspace-list|wp-admin|spam)"\
     --allowsizemismatch --nofoldersizes --skipsize --fast --timeout 100

    sleep 5
  done
</code></pre>

<hr />

<h2>Migrar Contactos</h2>

<p>En la página de gmail, en la cuenta <em>antigua</em>, vamos a <em>Contactos</em>, en <em>Más
Opciones</em> seleccionamos <em>Exportar</em> y lo descargamos en formato Google CSV.</p>

<p><img src="./img/export-import-contacts.png" alt="export-import-contacts" /></p>

<p>En la cuenta nueva, realizamos el proceso inverso, <em>Más opciones</em>&ndash;><em>Importar</em> y seleccionamos el CSV.</p>

<h2>Migrar feeds Google Reader</h2>

<p>Los feeds suscritos en Google Reader pueden exportarse también en un fichero.
Dentro del Reader, logeado con la cuenta <em>antigua</em>, vamos a <em>Opciones de Reader</em>&ndash;><em>Importar/Exportar</em> y descarga el fichero tipo <strong>OPML</strong>.</p>

<p><img src="./img/export-reader.png" alt="export-reader" /></p>

<p>Una vez conseguido ese fichero, vamos al reader de la cuenta <em>nueva</em>, también a
<em>Opciones de Reader</em>&ndash;><em>Importar/Exportar</em>  y subimos el fichero <strong>OPML</strong> que antes
descargamos.</p>

<h2>Migrar calendarios</h2>

<p>Los calendarios realmente no están <em>dentro</em> de tu cuenta, sino que pueden ser
compartidos por varias personas con privilegios similares a los del usuario que
los creó, de forma que lo único que hay que hacer realmente es compartirlo con
la cuenta de correo nueva con privilegios de administrador.</p>

<p><img src="./img/share-calendar.png" alt="share-calendar" /></p>

<h2>Migrar filtros</h2>

<p>Debe activarse la importación/exportación de filtros en el labs para ambas cuentas:</p>

<p><img src="./img/export-filter.png" alt="export-filter" /></p>

<p>Después de activarla solo tenemos que exportar en la página de la cuenta
antigua e importar en la de la nueva.</p>

<p><img src="./img/import-filter.png" alt="import-filter" /></p>

<h2>Intentos fallidos</h2>

<p>Lo intenté antes con <a href="http://getthunderbird.com">thunderbird</a>, como hacen <a href="http://www.twistermc.com/27915/move-gmail-to-gmail/">aquí</a>,
sincronizando ambos correos y arrastrando los directorios de una a otra cuenta,
y lo hace bien, pero no mantiene más de una etiqueta/carpeta por correo. Y
luego con <a href="http://gmail-backup.com">gmail-backup</a>, que no me conservó las etiquetas (y aparte es
propietario, te dan solo el binario y necesita Python 2.5, un peñazo).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrar de gmail a gmail]]></title>
    <link href="http://jvrsantacruz.github.io/blog/2012/02/19/bjarne-stroustrup-c11/"/>
    <updated>2012-02-19T22:00:00+01:00</updated>
    <id>http://jvrsantacruz.github.io/blog/2012/02/19/bjarne-stroustrup-c11</id>
    <content type="html"><![CDATA[<ul>
<li>Diferentes estilos de C++ no se suponia que se usasen por separado</li>
<li>Huir de las funciones antiguas que piden especificar tamaños y punteros y solo funcionan con datos básicos.</li>
<li>Mal estilo de programación es el 1 problema del código C++</li>
<li>Que se quiere? Simplificar el uso</li>
<li>Utilizar medidas del SI. Que es un double? Que es un objeto? El satélite que se perdió por cambio de unidades entre SI e Imperial.</li>
<li>Se hace hace mucho tiempo con plantillas, pero la notación es horrible y la gente no la usa.

<ul>
<li>Se pueden definir los propios LITERALES: operator &ldquo;&rdquo;</li>
</ul>
</li>
<li></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Renombrar etiqueta usb linux]]></title>
    <link href="http://jvrsantacruz.github.io/blog/2012/02/08/cambiar-label-usb-linux/"/>
    <updated>2012-02-08T22:00:00+01:00</updated>
    <id>http://jvrsantacruz.github.io/blog/2012/02/08/cambiar-label-usb-linux</id>
    <content type="html"><![CDATA[<p>En este caso es una tarjeta <em>SD</em> en FAT32 que no tiene label y al montarla
Ubuntu la llama <code>9016-4EF8</code>, lo cual no me dice mucho y me gustaría cambiarlo.
La herramienta para cambiar labels de FAT32 se llama <code>mlabel</code> y viene en el
paquete <code>mtools</code>.</p>

<ol>
<li><p>Averiguamos que dispositivo es, para llamarlo por su nombre después.</p>

<pre><code> $ df /media/9016-4EF8
 Filesystem           1K-blocks      Used Available Use% Mounted on
 /dev/sdb1             31263744        32  31263712   1% /media/9016-4EF8
</code></pre>

<p> Se llama <code>/dev/sdb1</code>.</p></li>
<li><p>La desmontamos para trabajar con el a gusto, que estaba en <code>/media/9016-4EF8</code>.</p>

<pre><code> $ sudo umount /media/9016-4EF8
</code></pre></li>
<li><p>Para usar <code>mlabel</code> necesitamos que el dispositivo tenga un nombre, asi que
copiamos la config por defecto de <code>mtools</code> y le añadimos nuestro dispositivo.
Lo llamaremos <code>i</code>.</p>

<pre><code>  $ cp /etc/mtools.conf ~/.mtoolsrc
  $ echo 'drive i: file="/dev/sdb1"' &gt;&gt; ~/.mtoolsrc
</code></pre></li>
<li><p>Renombramos la partición con <code>mlabel</code>.</p>

<pre><code> $ sudo mlabel i:mi_tarjeta
</code></pre></li>
</ol>


<p><strong>Nota</strong>: si <code>mlabel</code> os escupe algo parecido a esto:</p>

<pre><code>code-block::text
Total number of sectors (62543872) not a multiple of sectors per track (63)!
Add mtools_skip_check=1 to your .mtoolsrc file to skip this test
</code></pre>

<p>Sed obedientes y simplemente añadid <code>mtools_skip_check=1</code> al fichero.</p>

<pre><code>$ echo 'mtools_skip_check=1' &gt;&gt; ~/.mtoolsrc
</code></pre>

<p>Y listo, al conectar el dispositivo se monta solo con el nombre bueno:</p>

<pre><code>code-block::console
$ ls /media/
MI_TARJETA
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Generar CSS con Pygmentize]]></title>
    <link href="http://jvrsantacruz.github.io/blog/2012/02/07/crear-estilo-pygmentize/"/>
    <updated>2012-02-07T20:40:00+01:00</updated>
    <id>http://jvrsantacruz.github.io/blog/2012/02/07/crear-estilo-pygmentize</id>
    <content type="html"><![CDATA[<p>Para el coloreado de código de este blog empleo la herramienta <a href="http://pygments.org">pygmentize</a>, la
cual es capaz de generar un fichero css con el estilo con el que quiero que
salga el texto de los programas.</p>

<p>Para generar un estilo usar:</p>

<pre><code>code-block::bash
pygmentize -f html -S borland -a .codehilite &gt; pygment.css
</code></pre>

<p>Donde <code>borland</code> es el estilo y <code>.codehilite</code> es la clase a emplear para
localizar el código en la página posteriormente.
<a href="http://pygments.org/docs/cmdline/">Otras cosas</a> que pueden hacerse con la línea de comandos.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Calcular la nota media ponderada Universidades Españolas.]]></title>
    <link href="http://jvrsantacruz.github.io/blog/2011/02/09/calcular-la-nota-media-ponderada-universidades-espanolas/"/>
    <updated>2011-02-09T15:13:00+01:00</updated>
    <id>http://jvrsantacruz.github.io/blog/2011/02/09/calcular-la-nota-media-ponderada-universidades-espanolas</id>
    <content type="html"><![CDATA[<div class="img-center">

![image][]

</div>


<p>Los alumnos de la universidad de Cádiz (y andaluces en general)
podemos consultar este dato en la sección de información académica
de la plataforma para prácticas de empresa <a href="http://icaro.ual.es">Ícaro</a> o acudiendo al
Vicerrectorado de Alumnos donde pueden calculárnosla y extendernos
un certificado de nota.</p>

<p>Sin embargo, aunque lo podamos consultar o nos lo puedan hacer,
nunca está de mas comprender como funciona el sistema, y aparte,
calcular otras medias que siendo reales nos convengan más, ya que
el sistema por bloques que se emplea es manifiestamente injusto y
no refleja la nota real del alumno. Según el el cálculo actual,
<strong>un alumno con 6,9 es dos veces peor que un alumno con un 7</strong> en
lugar de haber entre ellos una diferencia de una décima.</p>

<p>Este esquema supongo que ha sido heredado de cuando en las
facultades no era obligatorio asignar una nota numérica sino tan
solo APROBADO, NOTABLE, SOBRESALIENTE y MATRÍCULA DE HONOR y en mi
opinión ya está más que superado; en todas las facultades se
utiliza un sistema numérico que permite saber con exactitud la nota
del alumno. Y aunque no se pudiese porque siguiesen existiendo
facultades &lsquo;chapadas a la antigua&rsquo;, no es conveniente tener un
estadístico que &lsquo;destruye&rsquo; información como este, que no es
representativo de la nota del alumno y expresa fatal el valor del
mismo. Tiene &lsquo;truco&rsquo;.</p>

<p>Entre estos cálculos para la nota media y algunos
profesores/aplicaciones informáticas en la universidad que
truncaban notas como 6,7 a 6, no me parece raro que los españoles
tengamos una nota media tan ridículamente baja en el currículum, la
cual nos dificulta y mucho la búsqueda de empleo en el extranjero,
donde las universidades si que inflan las finales que da gusto.
Cuando te juegas plazas, becas, puestos de trabajo y tu vida en
general, estas pequeñas idioteces y tristes clasificaciones saltan
a un primer plano y adquieren tanta importancia que me sorprende
que se use este método desde mi punto de vista tan malo. Tener
egresados con notas bajas <strong>no</strong> debería ser un signo de prestigio.
Pero bueno que me enredo.</p>

<p>La nota media del expediente académico universitario es un número
del 1 al 4, siendo 1 aprobado y 4 matrícula de honor. <br/>
La relación es la siguiente, solo se tienen en cuenta las
asignaturas aprobadas:</p>

<table>
    <th>
        <td>Nota 1-10</td>
        <td>Nota 1-4</td>
        <td>Nombre</td>
    </th>
    <tr>
        <td>1</td>
        <td>[5-7)</td>
        <td>Aprobado</td>
    </tr>

    <tr>
        <td>2</td>
        <td>[7-9)</td>
        <td>Notable</td>
    </tr>

    <tr>
        <td>3</td>
        <td>[9-10]</td>
        <td>Sobresaliente</td>
    </tr>

    <tr>
        <td>4</td>
        <td>10</td>
        <td>Matrícula de Honor</td>
    </tr>
</table>


<p>La manera de calcularla es aplicar la siguiente fórmula, tomando la
nota de cada asignatura, pasándola a la escala anterior y
multiplicándola por sus créditos:</p>

<p><img src="./img/media_1_4.svg" width="250px"/></p>

<p>Como comenté antes, este es un estadístico terrible para resumir el
expediente académico de un alumno, debido a los &lsquo;saltos&rsquo; que tiene
en el 7, el 9 y el 10. Una medida, con mucho, más representativa,
sería calcular la media aritmética ponderada con los créditos y
aplicar una &lsquo;regla de tres&rsquo; para pasarlo al intervalo 1-4.</p>

<p>Esto es precisamente lo que también hice, calcular esta y otras
medias para ver que estadístico representaba mejor mi expediente
académico. Con mejor no solo quiero decir que saliese más
favorecido, sino más adecuadamente en vista a los valores de mis
notas (que tienden al 6).</p>

<p>Para calcular la nota a partir de una cantidad numérica 1-10 y
obtener un porcentaje, empleé esta fórmula. Nótese que nota_min y
nota_max son la nota mínima para aprobar y la máxima que es
posible obtener en la Universidad correspondiente.</p>

<p><img src="./img/media_normalizada.svg" width="400px"/></p>

<p>O la media aritmética normal, sin ponderar con los créditos:</p>

<p><img src="./img/media_suma.svg" width="150px"/></p>

<p>En la Universidad de Cádiz tenemos disponibles nuestro expediente
completo a traves del <a href="http://www.uca.es/web/servicios/servicio_alumnos/automatricula/Paginas/uxxiportal">XXI Portal</a> de donde nos podemos bajar un
xls con las notas de las asignaturas aprobadas.</p>

<div class="img-center">
  
![Screenshot de calc con el csv de las notas][]

<sub>"Las notas copiadas, pegadas y con las líneas sin nota y cabeceras
eliminadas."</sub> 
</div>


<p>Lo que hago es seleccionar solo las asignaturas, eliminar las que
no tienen nota (normalmente créditos de libre provinentes de
prácticas de empresa, seminarios o conferencias) y pegarlo sin
cabecera en un csv plano con caracter separador la coma <strong>,</strong> y
delimitador de texto la doble comilla <strong>&ldquo;</strong>.</p>

<p>Tras hacer esto lo que tenemos es un notas.csv con la siguiente
estructura:</p>

<pre><code>code-block::csv
"1711014 ","ESTRUCTURA Y TECNOLOGÍA DE COMPUTADORES","9","TRONCAL","2006-07","JUNIO","APROBADO","6,6"

"1711013 ","FUNDAMENTOS DE SISTEMAS DIGITALES","6","TRONCAL","2006-07","FEBRERO","SOBRESALIENTE","9,6"

"1711022 ","INFORMÁTICA GENERAL","6","OBLIGATORIA","2006-07","FEBRERO","APROBADO","6,5"
</code></pre>

<p>Los campos que nos interesan son el tercero (créditos) y el octavo
y último (nota). Empleando python y su procesador de csv (baterías
incluidas!) podemos fácilmente parsear el fichero y obtener
nuestras notas. <br/>
Para ello creé un script que calcula todo esto, siguiendo una
plantilla para una beca del CSIC (Centro Superior de
Investigaciones Científicas) a la hora de realizar los cálculos. La
nota final coincide con la que obtengo en Ícaro, de manera que
supongo que es correcta.</p>

<p>El script lo llamo con ./media.py notas.csv e imprime tanto los
resultados como los cálculos intermedios. Tened en cuenta que la
formula del porcentaje emplea los valores de nota mínima para
aprobar y nota máxima a recibir, que en Cádiz son 5 y 10 pero que
de centro a centro pueden variar.</p>

<p>Para terminar, agradecería muchísimo cualquier tipo de
<strong>corrección o aviso de errores</strong>. Lo más probable es que haya
metido la pata en algún momento, que ignore algo relacionado con el
cálculo de notas o sobre la organización Universitaria, de manera
que si ves algo que no cuadre, por favor, deja un comentario :)</p>

<pre><code>#! /usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import csv

def error(text):
    print "Error:" + text
    sys.exit()

def nota_14(nota):
    """
    Recibe una nota del 5 al 10
    Devuelve la nota del 1-4 según la siguiente tabla del CSIC:
        [5-7)   -&gt; 1
        [7-9)   -&gt; 2
        [9-10)  -&gt; 3
        10      -&gt; 4

    Devuelve None si la nota no está en el intervalo [5-10]
    """
    if nota &lt; 5: return None
    elif nota &lt; 7: return 1.0
    elif nota &lt; 9: return 2.0
    elif nota &lt; 10: return 3.0
    elif nota == 10: return 4.0

def nota_percent(nota):
    """
    Recibe una nota del 0 al 10
    Devuelve la nota en porcentaje según la fórmula del CSIC
    """
    nota_min = 5.0   # nota minima para aprobar en Cádiz
    nota_max = 10.0  # nota máxima en Cádiz

    return 50.0 + ((50.0 * (nota - nota_min)) / (nota_max - nota_min))

def media(csvfile):
    """
    Toma un csv con las notas y devuelve la media de todas las asignaturas.
    Asume que la nota de las asignaturas está en el último campo de cada línea.
    """

    try:
        reader = csv.reader(open(csvfile, 'rb'), delimiter=",", quotechar='"')
    except:
        error("No se puede abrir el fichero %s" % csvfile)

    # cabecera de la tabla
    print "Nota, Expediente, Percent, 1-4, Creditos, creditos x 1-4"

    # totales
    creditos_total = 0.0
    nota_total = 0.0
    ponderada_14_total = 0.0
    ponderada_100_total = 0.0
    nasignaturas = 0.0
    n = 0

    for row in reader:

        n += 1

        if len(row) &lt; 8 :
            print "La linea: %s no tiene el número de campos necesarios."   
                 % str(row)
            next

        # El signo decimal es . no , como en españa
        row = [f.replace(',', '.') for f in row]

        # Obtener los campos
        curso = row[4]
        try: 
            creditos = float(row[2]) 
        except ValueError: 
            print "En la línea linea %d el campo 2 (creditos) %s no es un número"   
                    % (n,row[2])
            next

        try:
            nota = float(row[7])
        except ValueError:
            print "En la línea linea %d el campo 7 (notas) %s no es un número"   
                    % (n,row[2])
            next

        # Convertir entre escalas
        percent = nota_percent(nota)
        nota14 = nota_14(nota)
        ponderada_100 = creditos * percent
        ponderada_14 = creditos * nota14

        # Actualizar totales
        creditos_total += creditos
        nota_total += nota
        ponderada_14_total += ponderada_14
        ponderada_100_total += ponderada_100
        nasignaturas += 1

        # curso,  nota, percent, 14, creditos, creditos x 14
        print "%s   %d      %d       %d      %d      %d"   
                % (curso, nota, percent, nota14, creditos, ponderada_14)

    # calcular
    media_ponderada_14 = ponderada_14_total / creditos_total
    media_ponderada_100 = ponderada_100_total / creditos_total
    media_ponderada_100_14 = media_ponderada_100 * (4.0 / 100.0)
    media_normal = nota_total / nasignaturas

    #imprimir totales y resultado
    print "     Total Créditos: %d   Total creditos x 14: %d"   
            % (creditos_total, ponderada_14_total)
    print "     Media ponderada 1-4:         %.2f" % media_ponderada_14
    print "     Media ponderada 100:         %.2f" % media_ponderada_100
    print "     Media ponderada 100 en 1-4:  %.2f" % media_ponderada_100_14
    print "     Media sin ponderar:          %.2f" % media_normal


def main():
    if len(sys.argv) &lt; 1:
        error("Numero incorrecto de argumentos. \n\n Use: media.py file.csv")

    media(sys.argv[1])

main()
</code></pre>
]]></content>
  </entry>
  
</feed>
